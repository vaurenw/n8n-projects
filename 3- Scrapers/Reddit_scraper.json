{
  "name": "Reddit scraper",
  "nodes": [
    {
      "parameters": {},
      "id": "2c7b2958-2d47-4503-a328-6a8afbf2fcc9",
      "name": "When clicking ‘Test workflow’",
      "type": "n8n-nodes-base.manualTrigger",
      "position": [
        140,
        240
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "operation": "search",
        "subreddit": "SideProject",
        "keyword": "build this, looking for a solution",
        "limit": 10,
        "additionalFields": {
          "sort": "hot"
        }
      },
      "id": "1c1524c9-2a38-49d0-8b17-eb860cbb981e",
      "name": "Reddit",
      "type": "n8n-nodes-base.reddit",
      "typeVersion": 1,
      "position": [
        360,
        240
      ],
      "credentials": {
        "redditOAuth2Api": {
          "id": "hTyCoTEUMubcvvlk",
          "name": "Reddit account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "758de132-127a-43be-b62c-d103d3ab93c6",
              "leftValue": "={{ $json.ups }}",
              "rightValue": 2,
              "operator": {
                "type": "number",
                "operation": "gte"
              }
            },
            {
              "id": "52b9ba96-2990-42c3-92e0-0cdabc6df886",
              "leftValue": "={{ $json.selftext }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "4fcfa514-3e5f-47c7-ac97-76cd6257275d",
      "name": "If",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        580,
        240
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "b714f6c4-5c95-474e-970e-52dcf96d3735",
              "name": "upvotes",
              "value": "={{ $json.ups }}",
              "type": "number"
            },
            {
              "id": "d9b76846-b904-45d3-ba52-b993342bcf16",
              "name": "subredditsize",
              "value": "={{ $json.subreddit_subscribers }}",
              "type": "number"
            },
            {
              "id": "ddd57673-3b25-4769-87d5-17df1a6193c8",
              "name": "originalpost",
              "value": "={{ $json.selftext }}",
              "type": "string"
            },
            {
              "id": "9b1ece99-4ece-40a0-975f-987311abfd57",
              "name": "subreddit",
              "value": "={{ $json.subreddit }}",
              "type": "string"
            },
            {
              "id": "61b1ff56-c083-4024-9b3e-1499446bbded",
              "name": "posturl",
              "value": "={{ $json.url }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "47612e51-7473-406e-802e-59ddd62ad41d",
      "name": "Edit Fields",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        820,
        80
      ]
    },
    {
      "parameters": {
        "model": "gpt-3.5-turbo",
        "options": {}
      },
      "id": "247c3508-8a5d-45de-8f62-2eec3a5a9f3b",
      "name": "OpenAI Chat Model",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1,
      "position": [
        1180,
        300
      ],
      "credentials": {
        "openAiApi": {
          "id": "DJM4KQKkOherUPCC",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "agent": "conversationalAgent",
        "promptType": "define",
        "text": "=Decide whether this Reddit post is describing a business-related problem or a need for a solution. The post should mention a specific challenge or requirement that a business is trying to address.\nReddit Post: {{ $json.originalpost }}\nIs this post about a business problem or need for a solution? output only Yes or No ",
        "options": {}
      },
      "id": "4ba189c5-fceb-4b03-9064-c9e975ff6c32",
      "name": "AI Agent",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.7,
      "position": [
        1160,
        20
      ]
    },
    {
      "parameters": {
        "mode": "combine",
        "combineBy": "combineByPosition",
        "options": {}
      },
      "id": "67390fd8-9e55-4a1d-a6d7-d15568813478",
      "name": "Merge",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3,
      "position": [
        1520,
        340
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "308c4513-2126-4249-9df7-9783d136cc45",
              "leftValue": "={{ $json.output }}",
              "rightValue": "Yes",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "cf9bded4-cec9-4602-b8f4-70d28fb6b6b6",
      "name": "Filter",
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2.2,
      "position": [
        1740,
        340
      ]
    },
    {
      "parameters": {
        "model": "gpt-3.5-turbo",
        "options": {}
      },
      "id": "a31b2a5b-10d9-41c8-8d4e-87d2fdd2ffa7",
      "name": "OpenAI Chat Model1",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1,
      "position": [
        2200,
        0
      ],
      "credentials": {
        "openAiApi": {
          "id": "DJM4KQKkOherUPCC",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "d176e034-b111-4e7b-8afc-76d75b5178c5",
      "name": "Summarization Chain",
      "type": "@n8n/n8n-nodes-langchain.chainSummarization",
      "typeVersion": 2,
      "position": [
        2180,
        140
      ]
    },
    {
      "parameters": {
        "operation": "append",
        "documentId": {
          "__rl": true,
          "value": "1hTrmryCH9usiJshdsSPI-9GYCytffb72IiuIdS5j9pc",
          "mode": "list",
          "cachedResultName": "Startup Ideas from Reddit",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1hTrmryCH9usiJshdsSPI-9GYCytffb72IiuIdS5j9pc/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Sheet1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1hTrmryCH9usiJshdsSPI-9GYCytffb72IiuIdS5j9pc/edit#gid=0"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "Upvotes": "={{ $json.upvotes }}",
            "Subreddit": "={{ $json.subreddit }}",
            "url": "={{ $json.posturl }}",
            "Summary": "={{ $json.response.text }}",
            "Solution": "={{ $json.message.content }}",
            "Subreddit size": "={{ $('Reddit').item.json.subreddit_subscribers }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "Subreddit",
              "displayName": "Subreddit",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Subreddit size",
              "displayName": "Subreddit size",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Upvotes",
              "displayName": "Upvotes",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "url",
              "displayName": "url",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Summary",
              "displayName": "Summary",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Solution",
              "displayName": "Solution",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            }
          ]
        },
        "options": {}
      },
      "id": "5d2ec068-e70f-4bc8-b949-ce565f267450",
      "name": "Google Sheets",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        2720,
        500
      ],
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "wZJkdxSflNIMswVT",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "mode": "combine",
        "combineBy": "combineByPosition",
        "numberInputs": 3,
        "options": {}
      },
      "id": "95208371-ec7b-4a42-9028-7cad5dfbd66d",
      "name": "Merge1",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3,
      "position": [
        2540,
        500
      ]
    },
    {
      "parameters": {
        "modelId": {
          "__rl": true,
          "value": "gpt-3.5-turbo",
          "mode": "list",
          "cachedResultName": "GPT-3.5-TURBO"
        },
        "messages": {
          "values": [
            {
              "content": "=Based on the following Reddit post, suggest a business idea or service that I could create to help solve this problem for this business and others with similar needs.\nReddit Post: {{ $json.originalpost }}\nProvide a concise description of a business idea or service that would address this issue effectively for multiple businesses facing similar challenges. "
            }
          ]
        },
        "options": {}
      },
      "id": "3d7828b5-6eb1-4dd5-8fe1-26ad4e2da990",
      "name": "OpenAI",
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.6,
      "position": [
        2140,
        340
      ],
      "credentials": {
        "openAiApi": {
          "id": "DJM4KQKkOherUPCC",
          "name": "OpenAi account"
        }
      }
    }
  ],
  "pinData": {},
  "connections": {
    "When clicking ‘Test workflow’": {
      "main": [
        [
          {
            "node": "Reddit",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Reddit": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          },
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "Filter",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filter": {
      "main": [
        [
          {
            "node": "Summarization Chain",
            "type": "main",
            "index": 0
          },
          {
            "node": "OpenAI",
            "type": "main",
            "index": 0
          },
          {
            "node": "Merge1",
            "type": "main",
            "index": 2
          }
        ]
      ]
    },
    "OpenAI Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "Summarization Chain",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Summarization Chain": {
      "main": [
        [
          {
            "node": "Merge1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge1": {
      "main": [
        [
          {
            "node": "Google Sheets",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI": {
      "main": [
        [
          {
            "node": "Merge1",
            "type": "main",
            "index": 1
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "19299d89-64e2-4630-bf49-235487d05bbb",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "7d66c31e824ccc27a1c63c6d94d056670e6dff78822308132a15fb3242c8d136"
  },
  "id": "wE0JoZh6BM2yRHZY",
  "tags": []
}